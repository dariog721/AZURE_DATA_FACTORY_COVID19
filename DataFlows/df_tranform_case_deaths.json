{
    "name": "df_tranform_case_deaths",
    "properties": {
        "type": "MappingDataFlow",
        "typeProperties": {
            "sources": [
                {
                    "dataset": {
                        "referenceName": "ds_transform_cases_deaths",
                        "type": "DatasetReference"
                    },
                    "name": "CasesAndDeathSource"
                },
                {
                    "dataset": {
                        "referenceName": "ds_country_lookup",
                        "type": "DatasetReference"
                    },
                    "name": "CountryLookup"
                }
            ],
            "sinks": [
                {
                    "dataset": {
                        "referenceName": "ds_processed_cases_deaths",
                        "type": "DatasetReference"
                    },
                    "name": "CasesAndDeathsSink"
                }
            ],
            "transformations": [
                {
                    "name": "FilterEurope"
                },
                {
                    "name": "SelectOnlyRequiered"
                },
                {
                    "name": "PivotCounts"
                },
                {
                    "name": "LookupContry"
                },
                {
                    "name": "SelectForSink"
                }
            ],
            "scriptLines": [
                "source(output(",
                "          country as string,",
                "          country_code as string,",
                "          continent as string,",
                "          population as integer,",
                "          indicator as string,",
                "          daily_count as integer,",
                "          date as date,",
                "          rate_14_day as double,",
                "          source as string",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     ignoreNoFilesFound: false) ~> CasesAndDeathSource",
                "source(output(",
                "          country as string,",
                "          country_code_2_digit as string,",
                "          country_code_3_digit as string,",
                "          continent as string,",
                "          population as string",
                "     ),",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     ignoreNoFilesFound: false) ~> CountryLookup",
                "CasesAndDeathSource filter(continent == 'Europe' && not(isNull(country_code))) ~> FilterEurope",
                "FilterEurope select(mapColumn(",
                "          country,",
                "          country_code,",
                "          population,",
                "          indicator,",
                "          daily_count,",
                "          source,",
                "          each(match(name == 'date'),",
                "               'reported' + '_date' = $$)",
                "     ),",
                "     skipDuplicateMapInputs: false,",
                "     skipDuplicateMapOutputs: false) ~> SelectOnlyRequiered",
                "SelectOnlyRequiered pivot(groupBy(country,",
                "          country_code,",
                "          population,",
                "          source,",
                "          reported_date,",
                "          country_special = country + country_code),",
                "     pivotBy(indicator, ['confirmed cases', 'deaths']),",
                "     Count = sum(daily_count),",
                "     columnNaming: '$N_$V',",
                "     lateral: true) ~> PivotCounts",
                "PivotCounts, CountryLookup lookup(PivotCounts@country == CountryLookup@country,",
                "     multiple: false,",
                "     pickup: 'any',",
                "     broadcast: 'auto')~> LookupContry",
                "LookupContry select(mapColumn(",
                "          country = PivotCounts@country,",
                "          country_code_2_digit,",
                "          country_code_3_digit,",
                "          population = PivotCounts@population,",
                "          {Count_confirmed cases},",
                "          Count_deaths,",
                "          reported_date,",
                "          source",
                "     ),",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true) ~> SelectForSink",
                "SelectForSink sink(allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     partitionFileNames:['case_deaths.csv'],",
                "     umask: 0022,",
                "     preCommands: [],",
                "     postCommands: [],",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true,",
                "     partitionBy('hash', 1)) ~> CasesAndDeathsSink"
            ]
        }
    }
}